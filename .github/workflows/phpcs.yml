name: CI Build
on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    container:
      image: php:8.2-fpm
      env:
        NODE_ENV: production
      ports:
      - 80
      volumes:
      - $GITHUB_WORKSPACE:/nas/content/live/bigbitev3
    steps:
    - name: Set up container
      run: |
        echo "Update package lists."
        apt-get update
        echo "Install base packages."
        apt-get install -y build-essential libssl-dev gnupg libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev libicu-dev libxml2-dev vim wget unzip git subversion default-mysql-client
        echo "Add yarn package repository."
        curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
        echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
        echo "Update package lists."
        apt-get update
        echo "Install NVM."
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.34.0/install.sh | bash
        . ~/.nvm/nvm.sh
        echo "Install node."
        nvm install 12.9.0
        nvm use 12.9.0
        echo "Install yarn."
        apt-get install -y yarn
        echo "Install composer."
        curl -sS https://getcomposer.org/installer | php
        mv composer.phar /usr/local/bin/composer
        echo "Install PHP extensions."
        docker-php-ext-install -j$(nproc) iconv intl xml soap opcache pdo pdo_mysql mysqli mbstring
        docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
        docker-php-ext-install -j$(nproc) gd
        pecl install mcrypt-1.0.2
        docker-php-ext-enable mcrypt

    - name: Checkout repository
      uses: actions/checkout@v1

    - name: Run yarn install
      run: |
        yarn install

    - name: Run yarn build
      run: |
        yarn run build --if-present

    - name: Run composer install
      run: |
        composer install --prefer-dist

    - name: Install PHPCS with WordPress Coding Standards
      run: |
        composer global require dealerdirect/phpcodesniffer-composer-installer:0.5.0 wp-coding-standards/wpcs:2.1.1 automattic/vipwpcs:2.0.0

    - name: Run PHPCS Coding Standards
      run: |
        ~/.composer/vendor/bin/phpcs $GITHUB_WORKSPACE

    - name: Create a built branch
      run: |
        BRANCH_NAME=$(echo $GITHUB_REF | grep -oP '(?<=refs\/heads\/).*')
        rm .gitignore
        mv .deployignore .gitignore
        git config --global user.email "ci@company.com"
        git config --global user.name "Company CI"
        git remote set-url origin https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git
        git checkout -b $BRANCH_NAME-built
        git add -A && git commit -m "built from $GITHUB_SHA"
        git push --force -u origin $BRANCH_NAME-built
